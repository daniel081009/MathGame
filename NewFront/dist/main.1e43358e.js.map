{"version":3,"sources":["../src/lib/dom.ts","../src/lib/template.ts","../src/lib/modify-template.ts","../src/lib/directive.ts","../src/lib/part.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/template-factory.ts","../src/lib/render.ts","../src/lib/default-template-processor.ts","src/lit-html.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","src/all.js","src/page/userauth.js","src/page/game.js","src/main.js","../../../../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["ChangePage","page","console","log","document","body","innerHTML","BaseURL","Login","requestUpdate","username","getElementsByTagName","value","password","req","axios","post","withCredentials","data","status","localStorage","setItem","token","location","reload","href","history","go","getElementById","innerText","repassword","html","clicklogin","css","clickregister","register","login","LitElement","customElements","define","GameMain","game_id","game_setting","type","runningTime","level","start_time","problem","index","semple","Problem","Answer","User_Answer","Time","ms","Promise","r","setTimeout","ri","querySelector","le","ti","temp","createElement","style","color","fontSize","id","getElementsByClassName","appendChild","remove","e","Number","gmae_id","ID","sleep","game_end","Date","Start","length","keyCode","target","push","tlog","game_end_data","setting","game","end","game_enter","CheckToken","getItem","cookie","Top","Main","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","stackTrace","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        // Type assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n        return JSON.parse(value!) as unknown;\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)\n            .requestUpdateInternal(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState!: UpdateState;\n  private _instanceProperties?: PropertyValues;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise!: Promise<unknown>;\n  private _enableUpdatingResolver: ((r?: unknown) => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._updateState = 0;\n    this._updatePromise =\n        new Promise((res) => this._enableUpdatingResolver = res);\n    this._changedProperties = new Map();\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdateInternal();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This protected version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  protected requestUpdateInternal(\n      name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      options = options || ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this.requestUpdateInternal(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this._hasRequestedUpdate) {\n      return;\n    }\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   * @deprecated Override `getUpdateComplete()` instead for forward\n   *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.\n   */\n  protected _getUpdateComplete() {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async getUpdateComplete() {\n   *       await super.getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure Compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n * @deprecated `internalProperty` has been renamed to `state` in lit-element\n *     3.0. Please update to `state` now to be compatible with 3.0.\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n */\nexport const state = (options?: InternalPropertyDeclaration) =>\n    internalProperty(options);\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    if (cache) {\n      const prop =\n          name !== undefined ? name : (protoOrDescriptor as ClassElement).key;\n      const key = typeof prop === 'symbol' ? Symbol() : `__${prop}`;\n      descriptor.get = function(this: LitElement) {\n        if ((this as unknown as\n             {[key: string]: Element | null})[key as string] === undefined) {\n          ((this as unknown as {[key: string]: Element | null})[key as string] =\n               this.renderRoot.querySelector(selector));\n        }\n        return (\n            this as unknown as {[key: string]: Element | null})[key as string];\n      };\n    }\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n    ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n    slotName = '', flatten = false, selector = '') {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const slotSelector =\n            `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n        const slot = this.renderRoot.querySelector(slotSelector);\n        let nodes = slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n              (node) => node.nodeType === Node.ELEMENT_NODE &&\n                  // tslint:disable-next-line:no-any testing existence on older browsers\n                  ((node as any).matches ?\n                       (node as Element).matches(selector) :\n                       legacyMatches.call(node as Element, selector)));\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `supportsAdoptingStyleSheets` is true then we assume\n      // CSSStyleSheet is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport {UpdatingElement as ReactiveElement} from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.5.1');\n\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\n\nexport interface CSSResultArray extends\n    Array<CSSResultOrNative|CSSResultArray> {}\n\nexport type CSSResultGroup = CSSResultOrNative|CSSResultArray;\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Reference to the underlying library method used to render the element's\n   * DOM. By default, points to the `render` method from lit-html's shady-render\n   * module.\n   *\n   * **Most users will never need to touch this property.**\n   *\n   * This  property should not be confused with the `render` instance method,\n   * which should be overridden to define a template for the element.\n   *\n   * Advanced users creating a new base class based on LitElement can override\n   * this property to point to a custom render method with a signature that\n   * matches [shady-render's `render`\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n   *\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   */\n  static styles?: CSSResultGroup;\n\n  /** @nocollapse */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  private static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResultGroup|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n\n    if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\n          Set<CSSResultOrNative> => styles.reduceRight(\n              (set: Set<CSSResultOrNative>, s) =>\n                  // Note: On IE set.add() does not return the set\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n              set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\n      const styles: CSSResultOrNative[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = userStyles === undefined ? [] : [userStyles];\n    }\n\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\n    // invalid in two conditions.\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n    //     this is impossible to check except via .replaceSync or use\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n    //     false)\n    this._styles = this._styles.map((s) => {\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n        // Flatten the cssText from the passed constructible stylesheet (or\n        // undetectable non-constructible stylesheet). The user might have\n        // expected to update their stylesheets over time, but the alternative\n        // is a crash.\n        const cssText = Array.prototype.slice.call(s.cssRules)\n                            .reduce((css, rule) => css + rule.cssText, '');\n        return unsafeCSS(cssText);\n      }\n      return s;\n    });\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n   * captures any pre-set values for registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {\n      renderRoot: Element|DocumentFragment;\n    }).renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow(\n        (this.constructor as typeof LitElement).shadowRootOptions);\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the [[`styles`]]\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => (s as CSSResult).cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = (s as CSSResult).cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `NodePart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","/*\n    0 : login && register\n    1 : game_menu && game\n    2 : dashboard\n    3 : ranking\n    4 : setting\n*/\nfunction ChangePage(page) {\n  console.log(page);\n  if (page == 0) {\n    document.body.innerHTML = `<login-page></login-page>`;\n  } else if (page == 1) {\n    document.body.innerHTML = `<game-menu></game-menu>`;\n  } else if (page == 2) {\n  } else if (page == 3) {\n  } else if (page == 4) {\n  }\n}\n\nexport default ChangePage;\n","import { LitElement, html } from \"lit-element\";\nimport ChangePage from \"../all\";\n\nconst BaseURL = \"http://localhost:8080\";\n\nexport class Login extends LitElement {\n  constructor() {\n    super();\n    /*\n      0: login, 1: register  \n    */\n    this.page = 0;\n  }\n  ChangePage(page) {\n    console.log(page);\n    this.page = page;\n    this.requestUpdate();\n  }\n  createRenderRoot() {\n    return this;\n  }\n\n  async clicklogin() {\n    const username = document.getElementsByTagName(\"input\")[0].value;\n    const password = document.getElementsByTagName(\"input\")[1].value;\n    const req = {\n      username: username,\n      password: password,\n    };\n    try {\n      let data = await axios.post(`${BaseURL}/user/login`, req, {\n        withCredentials: true,\n      });\n      if (data.status == 200) {\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"Token\", data.data.token);\n        location.reload(true);\n        location.href = location.href;\n        history.go(-1);\n      }\n    } catch (e) {\n      document.getElementById(\"errmsg\").innerText =\n        \"아이디 비밀번호를 확인해주세요\";\n    }\n  }\n  async clickregister() {\n    const username = document.getElementsByTagName(\"input\")[0].value;\n    const password = document.getElementsByTagName(\"input\")[1].value;\n    const repassword = document.getElementsByTagName(\"input\")[2].value;\n    if (password != repassword) {\n      document.getElementById(\"errmsg\").innerText =\n        \"비밀번호가 일치하지 않습니다\";\n      return;\n    }\n    const req = {\n      username: username,\n      password: password,\n    };\n    try {\n      let data = await axios.post(`${BaseURL}/user/register`, req);\n      if (data.status == 200) {\n        data = await axios.post(`${BaseURL}/user/login`, req);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"Token\", data.data.token);\n        ChangePage(1);\n      }\n    } catch (e) {\n      document.getElementById(\"errmsg\").innerText =\n        \"아이디 비밀번호를 확인해주세요\";\n    }\n  }\n\n  login() {\n    return html`\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 col-md-2\"></div>\n          <div class=\"col-lg-6 col-md-8 login-box\">\n            <div class=\"col-lg-12 login-title\">Login</div>\n            <div class=\"col-lg-6 login-btm login-text\" id=\"errmsg\"></div>\n\n            <div class=\"col-lg-12 login-form\">\n              <div class=\"col-lg-12 login-form\">\n                <div>\n                  <div class=\"form-group\">\n                    <label class=\"form-control-label\">USERNAME</label>\n                    <input type=\"text\" class=\"form-control\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label class=\"form-control-label\">PASSWORD</label>\n                    <input type=\"password\" class=\"form-control\" i />\n                  </div>\n\n                  <div class=\"col-lg-12 loginbttm\">\n                    <button\n                      class=\"col-lg-12 btn btn-outline-primary\"\n                      @click=${this.clicklogin}\n                    >\n                      LOGIN\n                    </button>\n                    <button\n                      class=\"col-lg-5 btn btn-outline-primary\"\n                      @click=${() => {\n                        this.ChangePage(1);\n                      }}\n                    >\n                      register\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-2\"></div>\n          </div>\n        </div>\n        <link\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\n          rel=\"stylesheet\"\n          integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\"\n          crossorigin=\"anonymous\"\n        />\n\n        ${this.css()}\n      </div>\n    `;\n  }\n  register() {\n    return html`\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 col-md-2\"></div>\n          <div class=\"col-lg-6 col-md-8 login-box\">\n            <div class=\"col-lg-12 login-title\">Register</div>\n            <div class=\"col-lg-12 login-form\">\n              <div class=\"col-lg-12 login-form\">\n                <div>\n                  <div class=\"col-lg-6 login-btm login-text\" id=\"errmsg\"></div>\n                  <div class=\"form-group\">\n                    <label class=\"form-control-label\">USERNAME</label>\n                    <input type=\"text\" class=\"form-control\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label class=\"form-control-label\">PASSWORD</label>\n                    <input type=\"password\" class=\"form-control\" i />\n                  </div>\n                  <div class=\"form-group\">\n                    <label class=\"form-control-label\">Re PASSWORD</label>\n                    <input type=\"password\" class=\"form-control\" i />\n                  </div>\n\n                  <div class=\"col-lg-12 loginbttm\">\n                    <button\n                      class=\"col-lg-12 btn btn-outline-primary\"\n                      @click=${this.clickregister}\n                    >\n                      register\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-2\"></div>\n          </div>\n        </div>\n        <link\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\n          rel=\"stylesheet\"\n          integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\"\n          crossorigin=\"anonymous\"\n        />\n        ${this.css()}\n      </div>\n    `;\n  }\n  css() {\n    return html`\n      <style>\n        body {\n          background: #60c3f0;\n          font-family: \"Roboto\", sans-serif;\n        }\n\n        .login-box {\n          margin-top: 75px;\n          height: auto;\n          background: #1a2226;\n          text-align: center;\n          box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16),\n            0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n\n        .login-key {\n          height: 100px;\n          font-size: 80px;\n          line-height: 100px;\n          background: -webkit-linear-gradient(#27ef9f, #0db8de);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n        }\n\n        .login-title {\n          margin-top: 15px;\n          text-align: center;\n          font-size: 30px;\n          letter-spacing: 2px;\n          margin-top: 15px;\n          font-weight: bold;\n          color: #ecf0f5;\n        }\n\n        .login-form {\n          margin-top: 25px;\n          text-align: left;\n        }\n\n        input[type=\"text\"] {\n          background-color: #1a2226;\n          border: none;\n          border-bottom: 2px solid #0db8de;\n          border-top: 0px;\n          border-radius: 0px;\n          font-weight: bold;\n          outline: 0;\n          margin-bottom: 20px;\n          padding-left: 0px;\n          color: #ecf0f5;\n        }\n\n        input[type=\"password\"] {\n          background-color: #1a2226;\n          border: none;\n          border-bottom: 2px solid #0db8de;\n          border-top: 0px;\n          border-radius: 0px;\n          font-weight: bold;\n          outline: 0;\n          padding-left: 0px;\n          margin-bottom: 20px;\n          color: #ecf0f5;\n        }\n\n        .form-group {\n          margin-bottom: 40px;\n          outline: 0px;\n        }\n\n        .form-control:focus {\n          border-color: inherit;\n          -webkit-box-shadow: none;\n          box-shadow: none;\n          border-bottom: 2px solid #0db8de;\n          outline: 0;\n          background-color: #1a2226;\n          color: #ecf0f5;\n        }\n\n        input:focus {\n          outline: none;\n          box-shadow: 0 0 0;\n        }\n\n        label {\n          margin-bottom: 0px;\n        }\n\n        .form-control-label {\n          font-size: 10px;\n          color: #6c6c6c;\n          font-weight: bold;\n          letter-spacing: 1px;\n        }\n\n        .btn-outline-primary {\n          border-color: #0db8de;\n          color: #0db8de;\n          border-radius: 0px;\n          font-weight: bold;\n          letter-spacing: 1px;\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12),\n            0 1px 2px rgba(0, 0, 0, 0.24);\n        }\n\n        .btn-outline-primary:hover {\n          background-color: #0db8de;\n          right: 0px;\n        }\n\n        .login-btm {\n          float: left;\n        }\n\n        .login-button {\n          padding-right: 0px;\n          text-align: right;\n          margin-bottom: 25px;\n        }\n\n        .login-text {\n          text-align: left;\n          padding-left: 0px;\n          color: #a2a4a4;\n        }\n\n        .loginbttm {\n          padding: 0px;\n        }\n      </style>\n    `;\n  }\n  render() {\n    if (this.page == 1) {\n      return this.register();\n    }\n    return this.login();\n  }\n}\ncustomElements.define(\"login-page\", Login);\n","import { LitElement, html } from \"lit-element\";\n\nconst BaseURL = \"http://localhost:8080\";\nexport class GameMain extends LitElement {\n  constructor() {\n    super();\n    // 0: menu, 1: game ,2: End\n    this.page = 0;\n\n    this.game_id = \"\";\n    this.game_setting = {\n      type: 0,\n      runningTime: 0,\n      level: 0,\n    };\n    this.start_time = 0; // 게임 시작 시간\n    this.problem = [];\n    this.history = [];\n    this.index = 0;\n    this.semple = {\n      Problem: \"\",\n      Answer: 0,\n      User_Answer: 0,\n      Time: 0,\n    };\n  }\n  createRenderRoot() {\n    return this;\n  }\n  async sleep(ms) {\n    return new Promise((r) => setTimeout(r, ms));\n  }\n\n  async Start() {\n    const ri = document.querySelector('input[name=\"ri\"]:checked');\n    const le = document.querySelector('input[name=\"le\"]:checked');\n    const ti = document.querySelector('input[name=\"ti\"]:checked');\n\n    if (ri == null || le == null || ti == null) {\n      let temp = document.createElement(\"div\");\n      temp.innerText = \"선택좀;;\";\n      temp.style.color = \"red\";\n      temp.style.fontSize = \"2rem\";\n      temp.id = \"error\";\n      document.getElementsByClassName(\"container\")[0].appendChild(temp);\n      return;\n    } else {\n      try {\n        let temp = document.getElementById(\"error\");\n        temp.remove();\n      } catch (e) {}\n    }\n    this.game_setting = {\n      type: Number(ri.value),\n      runningTime: Number(ti.value),\n      level: Number(le.value),\n    };\n    let data = await axios.post(BaseURL + \"/game/create\", this.game_setting, {\n      withCredentials: true,\n    });\n    this.problem = data.data.problem;\n    this.gmae_id = data.data.ID;\n    (async () => {\n      console.log(\"start\");\n      await this.sleep(this.game_setting.runningTime * 1000);\n      console.log(\"end\");\n      await this.game_end();\n    })();\n    // this.a = setInterval(async () => {\n    //   await this.game_end();\n    //   clearInterval(this.a);\n    // }, this.game_setting.runningTime * 1000);\n    this.index = 0;\n    this.page = 1;\n    this.requestUpdate();\n    this.start_time = new Date();\n  }\n  setting() {\n    return html`\n      <div class=\"container\">\n        <fieldset>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ri\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"0\"\n            />\n            <label for=\"huey\">+</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ri\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"1\"\n            />\n            <label for=\"huey\">-</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ri\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"2\"\n            />\n            <label for=\"huey\">✕</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ri\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"3\"\n            />\n            <label for=\"huey\">÷</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ri\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"4\"\n            />\n            <label for=\"huey\">ALL</label>\n          </label>\n        </fieldset>\n\n        <fieldset>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"le\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"0\"\n            />\n            <label for=\"huey\">0~10</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"le\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"1\"\n            />\n            <label for=\"huey\">0~20</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"le\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"2\"\n            />\n            <label for=\"huey\">0~50</label>\n          </label>\n        </fieldset>\n\n        <fieldset>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ti\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"30\"\n            />\n            <label for=\"huey\">30s</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ti\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"60\"\n            />\n            <label for=\"huey\">1m</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ti\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"180\"\n            />\n            <label for=\"huey\">3m</label>\n          </label>\n          <label class=\"item\">\n            <input\n              type=\"radio\"\n              name=\"ti\"\n              class=\"item_radio\"\n              id=\"huey\"\n              value=\"3000\"\n            />\n            <label for=\"huey\">5m</label>\n          </label>\n        </fieldset>\n      </div>\n      <button @click=${this.Start} class=\"start\">start</button>\n      <style>\n        .container {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n          border: 0.6vh solid rgb(61, 61, 61);\n          border-radius: 5vh;\n        }\n        fieldset {\n          width: 100%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: none;\n          font-size: 3rem;\n        }\n        .start {\n          font-size: 2.5rem;\n          font-weight: 300;\n          margin: 0;\n          padding: 0;\n          margin-top: 1rem;\n          cursor: pointer;\n          transition: all 0.2s ease-in-out;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 15vw;\n          padding-left: 8vw;\n          padding-right: 8vw;\n          border: 0.6vh solid rgb(61, 61, 61);\n          border-radius: 2vh;\n          font-family: \"GmarketSansMedium\";\n          font-weight: 500;\n        }\n      </style>\n    `;\n  }\n  // game_en/\n\n  game_enter(e) {\n    if (this.index >= this.problem.length) {\n      this.game_end();\n      return;\n    }\n    if (e.keyCode === 13) {\n      console.log(this.semple, e.target.value);\n      let temp = this.semple;\n      temp.Problem = this.problem[this.index].Problem;\n      temp.Answer = this.problem[this.index].Answer;\n      temp.Time = this.start_time - new Date();\n      temp.Time *= -1;\n      temp.User_Answer = Number(e.target.value);\n\n      console.log(this.problem[this.index], temp, this.history);\n      this.history.push(temp);\n      this.index++;\n      this.requestUpdate();\n\n      this.start_time = new Date();\n      e.target.value = \"\";\n    }\n  }\n  async game_end() {\n    console.log(this.history, \"end!\");\n    console.log(this.gmae_id, this.problem, this.history);\n    let data = await axios.post(\n      \"http://localhost:8080/game/end\",\n      {\n        id: this.gmae_id,\n        tlog: this.history,\n      },\n      {\n        withCredentials: true,\n      }\n    );\n    this.game_end_data = data.data;\n    console.log(this.game_end_data);\n    this.page = 2;\n    this.requestUpdate();\n  }\n  render() {\n    if (this.page === 0) {\n      return this.setting();\n    } else if (this.page === 1) {\n      return this.game();\n    } else {\n      return this.end();\n    }\n  }\n\n  game() {\n    return html`\n      <div class=\"container\">\n        <div id=\"problem\">${this.problem[this.index].Problem}</div>\n        <input type=\"number\" autofocus @keypress=${this.game_enter} />\n      </div>\n    `;\n  }\n  end() {\n    return html`\n      <div class=\"container\">\n        <div id=\"problem\">end</div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define(\"game-main\", GameMain);\n","import { LitElement, html } from \"lit-element\";\nimport \"./page/userauth\";\nimport \"./page/game\";\n\nfunction CheckToken() {\n  if (localStorage.getItem(\"Token\") == null) {\n    return false;\n  } else {\n    document.cookie = `Token=${localStorage.getItem(\"Token\")}`;\n    return true;\n  }\n}\n\nexport class Top extends LitElement {\n  constructor() {\n    super();\n  }\n  createRenderRoot() {\n    return this;\n  }\n  render() {\n    return html`\n      <div class=\"top\">\n        <div id=\"nickname\">${localStorage.getItem(\"username\")}</div>\n\n        <div class=\"super_item\">Dashboard</div>\n        <div class=\"super_item\">Ranking</div>\n        <div class=\"super_item\">Setting</div>\n        <div class=\"super_item\">Logout</div>\n      </div>\n    `;\n  }\n}\n\nexport class Main extends LitElement {\n  constructor() {\n    super();\n    if (!CheckToken()) this.page = 0;\n    else this.page = 1;\n  }\n  changePage(page) {\n    this.page = page;\n    this.requestUpdate();\n  }\n  createRenderRoot() {\n    return this;\n  }\n  startClick() {\n    const ri = document.querySelector('input[name=\"ri\"]:checked');\n    const le = document.querySelector('input[name=\"le\"]:checked');\n    const ti = document.querySelector('input[name=\"ti\"]:checked');\n\n    if (ri == null || le == null || ti == null) {\n      let temp = document.createElement(\"div\");\n      temp.innerText = \"선택좀;;\";\n      temp.style.color = \"red\";\n      temp.style.fontSize = \"2rem\";\n      temp.id = \"error\";\n      document.getElementsByClassName(\"container\")[0].appendChild(temp);\n      return;\n    } else {\n      try {\n        let temp = document.getElementById(\"error\");\n        temp.remove();\n      } catch (e) {}\n    }\n    const data = {\n      type: ri.value,\n      runningTime: ti.value,\n      level: le.value,\n    };\n    console.log(data);\n    // TODO : fetch\n  }\n  render() {\n    if (this.page == 0) return html` <login-page></login-page>`;\n    else if (this.page == 1)\n      return html`\n        <div class=\"main\">\n          <top-bar></top-bar>\n          <div id=\"blockwow\"></div>\n\n          <game-main></game-main>\n        </div>\n      `;\n  }\n}\ncustomElements.define(\"main-menu\", Main);\ncustomElements.define(\"top-bar\", Top);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}